version: 0.2
env:
  secrets-manager:
    DB_USER: "endgame:db_user"
    DB_PASS: "endgame:db_pass"
    DB_HOST: "endgame:db_host"
    DB: "endgame:db"
    BACKEND_URL: "endgame:backend_url"
    FRONTEND_REPO_URI: "endgame:fronted_repo_uri"
    REGION: "endgame:region"
    ACC_NO: "endgame:acc_no"
    BACKEND_REPO_URI: "endgame:backend_repo_uri"
    # add the base64 encoded value of kubeconfig file in secret manager
    # use the command "base64 -w 0" to avoid the line breaks 
    KUBECONFIG_DATA: "arn:aws:secretsmanager:ap-south-1:654654515013:secret:kubeconfig-esFQ7T"

phases:
  install:
    commands:
    - sudo yum install docker -y
    - sudo yum install gettext -y
    - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.15/2023-01-11/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
    - aws sts get-caller-identity
    - cd frontend
    - echo "------ logging into the python ecr repo ------"
    - aws ecr get-login-password --region ${REGION} |sudo docker login --username AWS --password-stdin ${ACC_NO}.dkr.ecr.ap-south-1.amazonaws.com
    - echo "------ building the docker images ------"
    - sudo docker build -t frontend -f Dockerfile-modified .
    - sudo docker tag frontend ${FRONTEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker tag frontend ${FRONTEND_REPO_URI}:latest
    - cd ../backend/
    - sudo docker build -t backend .
    - sudo docker tag backend ${BACKEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker tag backend ${BACKEND_REPO_URI}:latest


    - echo "------ pushing docker images ------"
    - aws ecr get-login-password --region ${REGION} |sudo docker login --username AWS --password-stdin ${FRONTEND_REPO_URI}
    - sudo docker push ${FRONTEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker push ${FRONTEND_REPO_URI}:latest


    - aws ecr get-login-password --region ${REGION} |sudo docker login --username AWS --password-stdin ${BACKEND_REPO_URI}
    - sudo docker push ${BACKEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker push ${BACKEND_REPO_URI}:latest

  build:
    commands:

    - echo "------ setting the KUBECONFIG ------"
    - mkdir ~/.kube
    - echo ${KUBECONFIG_DATA} > ~/kubeconfig_base64.txt
    - cat ~/kubeconfig_base64.txt
    - base64 -d ~/kubeconfig_base64.txt > ~/.kube/config
    - cat ~/.kube/config
    - kubectl get po -A

    - echo "---------- encoding the values to BASE64 -----------------"
    - DB_USER_BASE64=$(echo ${DB_USER} | base64 -w 0)
    - DB_BASE64=$(echo ${DB} | base64 -w 0)
    - DB_PASS_BASE64=$(echo ${DB_PASS} | base64 -w 0)
    - DB_HOST_BASE64=$(echo ${DB_HOST} | base64 -w 0)
    - BACKEND_URL_BASE64=$(echo ${BACKEND_URL} | base64 -w 0)

    - echo "------ changing the secret_tmp.yml file values ------"
    - cd ../
    - envsubst < secret_tmp.yml > secret.yml

    - echo "------ changing the backend-deploy_tmp.yml file values ------"
    - envsubst < backend-deploy_tmp.yml > backend-deploy.yml

    - echo "------ changing the frontend-deploy_tmp.yml file values ------"
    - envsubst < frontend-deploy_tmp.yml > frontend-deploy.yml


  post_build:
    commands:
    - echo "------ applying the manifest files ------"
    - kubectl apply -f secret.yml
    - kubectl apply -f backend-deploy.yml
    - kubectl apply -f backend-svc.yml
    - kubectl apply -f frontend-deploy.yml
    - kubectl apply -f frontend-svc.yml
