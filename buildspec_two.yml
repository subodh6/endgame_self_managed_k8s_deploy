version: 0.2
env:
  secrets-manager:
    DB_USER: "endgame:db_user"
    DB_PASS: "endgame:db_pass"
    DB_HOST: "endgame:db_host"
    DB: "endgame:db"
    BACKEND_URL: "endgame:backend_url"
    FRONTEND_REPO_URI: "endgame:fronted_repo_uri"
    REGION: "endgame:region"
    BACKEND_REPO_URI: "endgame:backend_repo_uri"
    FRONTEND_TASK_FAMILY: "endgame:frontend_task_family"
    BACKEND_TASK_FAMILY: "endgame:backend_task_family"
    SECRET_NAME: "endgame:secret_name"
    ASSUME_ROLE_ARN: "endgame:assume_role_arn"
    SVC_ACC_ROLE_ARN: "endgame:svc_acc_role_arn"
    CLUSTER_NAME: "endgame:cluster_name"

phases:
  install:
    commands:
    - sudo yum install docker -y
    - sudo yum install gettext -y
    - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.15/2023-01-11/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

  build:
    commands:

    - echo "------ getting the temporary creds ------"
    - CREDS=$(aws sts assume-role --role-arn ${ASSUME_ROLE_ARN} --role-session-name codebuild --duration-seconds 900)
    - export AWS_ACCESS_KEY_ID="$(echo ${CREDS} | jq -r '.Credentials.AccessKeyId')"
    - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDS} | jq -r '.Credentials.SecretAccessKey')"
    - export AWS_SESSION_TOKEN="$(echo ${CREDS} | jq -r '.Credentials.SessionToken')"
    - export AWS_EXPIRATION=$(echo ${CREDS} | jq -r '.Credentials.Expiration')

    - echo "------ logging into eks ------"
    - aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${REGION}

  post_build:
    commands:
    - echo "------ applying the manifest files ------"
    - kubectl apply -f providerclass.yml
    - kubectl apply -f serviceaccount.yml
    - kubectl apply -f backend-deploy.yml
    - kubectl apply -f backend-svc.yml
    - kubectl apply -f frontend-deploy.yml
    - kubectl apply -f frontend-svc.yml

